{"version":3,"sources":["webpack:///node_modules/@iconify/icons-ic/twotone-log-in.js","webpack:///src/app/pages/pages/auth/login/login-routing.module.ts","webpack:///src/app/pages/pages/auth/login/login.component.html","webpack:///src/app/pages/pages/auth/login/login.component.ts","webpack:///src/app/pages/pages/auth/login/login.module.ts"],"names":["data","exports","__esModule","routes","path","component","LoginComponent","LoginRoutingModule","RouterModule","QuicklinkModule","router","fb","cd","snackbar","urlApi","inputType","visible","icVisibility","icVisibilityOff","icSign","isLoading","form","group","email","Validators","password","navigate","userStorage","localStorage","getItem","passStorage","undefined","open","duration","userAuth","setTimeout","markForCheck","toggleVisibility","signinUser","fadeInUp400ms","LoginModule","CommonModule","FlexLayoutModule","ReactiveFormsModule","MatInputModule","MatIconModule","MatSnackBarModule","IconModule","MatTooltipModule","MatButtonModule","MatCheckboxModule","MatProgressSpinnerModule"],"mappings":"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","file":"src_app_pages_pages_auth_login_login_module_ts-es5.js","sourcesContent":["var data = {\n\t\"body\": \"<path d=\\\"M9 2h9c1.1 0 2 .9 2 2v16c0 1.1-.9 2-2 2H9c-1.1 0-2-.9-2-2v-2h2v2h9V4H9v2H7V4c0-1.1.9-2 2-2z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M10.09 15.59L11.5 17l5-5l-5-5l-1.41 1.41L12.67 11H3v2h9.67z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { QuicklinkModule } from 'ngx-quicklink';\nimport { LoginComponent } from './login.component';\nimport { VexRoutes } from '../../../../../@vex/interfaces/vex-route.interface';\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule, QuicklinkModule]\n})\nexport class LoginRoutingModule {\n}\n","<div class=\"w-full h-full\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <div @fadeInUp class=\"card overflow-hidden w-full max-w-sm\">\n    <div class=\"p-6 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div class=\"fill-current text-center\">\n        <img class=\"w-64\" src=\"assets/img/demo/logo.png\">\n      </div>\n    </div>\n\n    <div class=\"text-center mt-4\">\n      <h2 class=\"title m-0\">User Login</h2>\n      <h4 class=\"body-2 text-secondary m-0\">Sign in with your credentials below.</h4>\n    </div>\n\n    <div [formGroup]=\"form\" class=\"p-6\" fxLayout=\"column\" fxLayoutGap=\"16px\">\n      <div fxFlex=\"auto\" fxLayout=\"column\">\n        <mat-form-field appearance=\"outline\" fxFlex=\"grow\">\n          <mat-label>E-Mail</mat-label>\n          <input [(ngModel)]=\"email\" formControlName=\"email\" matInput required autofocus>\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">We need an email address to log you in</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" fxFlex=\"grow\">\n          <mat-label>Password</mat-label>\n          <input [(ngModel)]=\"password\" [type]=\"inputType\" formControlName=\"password\" matInput required>\n          <button (click)=\"toggleVisibility()\" mat-icon-button matSuffix matTooltip=\"Toggle Visibility\" type=\"button\">\n            <mat-icon *ngIf=\"visible\" [icIcon]=\"icVisibility\"></mat-icon>\n            <mat-icon *ngIf=\"!visible\" [icIcon]=\"icVisibilityOff\"></mat-icon>\n          </button>\n          <!-- <mat-hint>Click the eye to toggle visibility</mat-hint> -->\n          <mat-error *ngIf=\"form.get('password').hasError('required')\">We need a password to log you in</mat-error>\n        </mat-form-field>\n\n        <!-- <mat-progress-spinner mode=\"determinate\" [value]=\"40\"></mat-progress-spinner> -->\n        <mat-spinner *ngIf=\"isLoading\" diameter=\"30\" class=\"float-center\"></mat-spinner>\n      </div>\n\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <mat-checkbox class=\"caption\" color=\"primary\">Remember Me</mat-checkbox>\n        <button (click)=\"signinUser()\" color=\"primary\" mat-raised-button type=\"button\">\n          SIGN IN <mat-icon color=\"text-secondary\" [icIcon]=\"icSign\"></mat-icon>\n        </button>\n        \n      </div>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <a [routerLink]=\"['/forgot-password']\">Forgot Password?</a>\n        <a [routerLink]=\"['/register']\">Sign up Now</a>\n      </div>\n      <br />\n      <p class=\"text-center\">\n        2021 &copy; Sellershub. All Rights Reserved.\n      </p>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport icVisibility from '@iconify/icons-ic/twotone-visibility';\nimport icVisibilityOff from '@iconify/icons-ic/twotone-visibility-off';\nimport { fadeInUp400ms } from '../../../../../@vex/animations/fade-in-up.animation';\nimport icSign from '@iconify/icons-ic/twotone-log-in';\nimport { UrlAPIService } from 'src/app/services/url-api.service';\n\n@Component({\n  selector: 'vex-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    fadeInUp400ms\n  ]\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  inputType = 'password';\n  visible = false;\n\n  icVisibility = icVisibility;\n  icVisibilityOff = icVisibilityOff;\n  email: string;\n  password: string;\n  icSign = icSign;\n  isLoading = false;\n\n  constructor(private router: Router,\n              private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private snackbar: MatSnackBar,\n              private urlApi: UrlAPIService\n  ) {}\n\n  ngOnInit() {\n    this.isLoading = false;\n    this.form = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  send() {\n    this.router.navigate(['/']);\n  }\n\n  signinUser(){\n    var userStorage = localStorage.getItem('userLoginEmail');\n    var passStorage = localStorage.getItem('userLoginPass');\n    if(this.email == \"\" || this.email == undefined){\n      this.snackbar.open('Please enter your email', 'Try Again', {\n        duration: 10000\n      });\n    }\n    else if(this.password == \"\" || this.password == undefined){\n      this.snackbar.open('Please enter your password', 'Try Again', {\n        duration: 10000\n      });\n      \n    }\n    else{\n      this.isLoading = true;\n      this.urlApi.userAuth(this.email, this.password);\n      setTimeout(() => {\n        this.isLoading = true;\n      }, 500);\n    }\n  }\n\n  toggleVisibility() {\n    if (this.visible) {\n      this.inputType = 'password';\n      this.visible = false;\n      this.cd.markForCheck();\n    } else {\n      this.inputType = 'text';\n      this.visible = true;\n      this.cd.markForCheck();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatSnackBarModule,\n    IconModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class LoginModule {\n}\n"]}