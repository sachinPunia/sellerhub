{"version":3,"sources":["webpack:///src/@vex/animations/fade-in-right.animation.ts","webpack:///src/app/pages/ui/forms/form-wizard/form-wizard-routing.module.ts","webpack:///src/app/pages/ui/forms/form-wizard/form-wizard.component.html","webpack:///src/app/pages/ui/forms/form-wizard/form-wizard.component.ts","webpack:///src/app/pages/ui/forms/form-wizard/form-wizard.module.ts"],"names":["fadeInRightAnimation","duration","trigger","transition","style","transform","opacity","animate","fadeInRight400ms","routes","path","component","FormWizardComponent","FormWizardRoutingModule","RouterModule","QuicklinkModule","fb","cd","snackbar","phonePrefixOptions","passwordInputType","icDoneAll","icDescription","icVerticalSplit","icVisibility","icVisibilityOff","icMoreVert","accountFormGroup","group","username","Validators","name","email","phonePrefix","phone","passwordFormGroup","password","passwordConfirm","confirmFormGroup","terms","verticalAccountFormGroup","verticalPasswordFormGroup","verticalConfirmFormGroup","markForCheck","open","submit","stagger80ms","fadeInUp400ms","scaleIn400ms","FormWizardModule","CommonModule","MatSnackBarModule","MatIconModule","ReactiveFormsModule","MatStepperModule","FlexLayoutModule","MatInputModule","MatButtonModule","MatCheckboxModule","SecondaryToolbarModule","MatSelectModule","IconModule","BreadcrumbsModule","ContainerModule"],"mappings":"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","file":"src_app_pages_ui_forms_form-wizard_form-wizard_module_ts-es5.js","sourcesContent":["import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInRightAnimation(duration: number) {\r\n  return trigger('fadeInRight', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateX(-20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'translateX(0)',\r\n        opacity: 1\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInRight400ms = fadeInRightAnimation(400);\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { QuicklinkModule } from 'ngx-quicklink';\nimport { FormWizardComponent } from './form-wizard.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormWizardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule, QuicklinkModule]\n})\nexport class FormWizardRoutingModule {\n}\n","<vex-secondary-toolbar current=\"Form Wizard\">\n  <vex-breadcrumbs [crumbs]=\"['Forms', 'Form Wizard']\" fxFlex=\"auto\"></vex-breadcrumbs>\n\n  <button class=\"ml-2\" color=\"primary\" mat-icon-button type=\"button\">\n    <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\n  </button>\n</vex-secondary-toolbar>\n\n<div @stagger class=\"p-gutter\" vexContainer>\n\n  <h2 class=\"title mb-4\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n    <span @scaleIn class=\"w-10 h-10 rounded-full text-primary mr-3 flex items-center justify-center bg-primary-light\">\n      <ic-icon [icon]=\"icDescription\" height=\"20px\" width=\"20px\"></ic-icon>\n    </span>\n    <span @fadeInRight class=\"block\">Horizontal Form Wizard</span>\n  </h2>\n\n  <div @fadeInUp class=\"card overflow-hidden\">\n    <mat-horizontal-stepper #stepper=\"matHorizontalStepper\" [linear]=\"true\">\n      <ng-template matStepperIcon=\"edit\">\n        <mat-icon [icIcon]=\"icDoneAll\"></mat-icon>\n      </ng-template>\n\n      <ng-template matStepperIcon=\"done\">\n        <mat-icon [icIcon]=\"icDoneAll\"></mat-icon>\n      </ng-template>\n\n      <mat-step [stepControl]=\"accountFormGroup\">\n        <form [formGroup]=\"accountFormGroup\">\n          <ng-template matStepLabel>Create Account</ng-template>\n\n          <h2 class=\"title m-0\">Create Account</h2>\n          <div class=\"subheading-1\">Set up your account for testing purposes.</div>\n\n          <div class=\"mt-4\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <mat-form-field fxFlex=\"auto\">\n              <mat-label>Account Username</mat-label>\n              <input formControlName=\"username\" matInput required>\n              <mat-hint>This will be your unique login name.</mat-hint>\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"auto\">\n              <mat-label>Name</mat-label>\n              <input formControlName=\"name\" matInput required>\n              <mat-hint>How may we call you?</mat-hint>\n            </mat-form-field>\n\n            <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>E-Mail</mat-label>\n                <input formControlName=\"email\" matInput required>\n                <mat-hint align=\"end\">example@example.com</mat-hint>\n              </mat-form-field>\n\n              <div fxFlex=\"auto\" fxLayout=\"row\" fxLayoutGap=\"8px\">\n                <mat-form-field class=\"vex-flex-form-field\" fxFlex=\"none\">\n                  <mat-label>Code</mat-label>\n                  <mat-select formControlName=\"phonePrefix\">\n                    <mat-option *ngFor=\"let option of phonePrefixOptions\" [value]=\"option\">{{ option }}</mat-option>\n                  </mat-select>\n                </mat-form-field>\n\n                <mat-form-field class=\"vex-flex-form-field\" fxFlex=\"auto\">\n                  <mat-label>Phone Number</mat-label>\n                  <input formControlName=\"phone\" matInput>\n                  <mat-hint align=\"end\"></mat-hint>\n                </mat-form-field>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n            <button (click)=\"stepper.reset()\" [disabled]=\"accountFormGroup.pristine\" color=\"primary\" mat-button\n                    type=\"button\">RESET\n            </button>\n            <button [disabled]=\"accountFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>NEXT\n            </button>\n          </div>\n        </form>\n      </mat-step>\n\n      <mat-step [stepControl]=\"passwordFormGroup\">\n        <form [formGroup]=\"passwordFormGroup\">\n          <ng-template matStepLabel>Select a Password</ng-template>\n\n          <h2 class=\"title m-0\">Select a Password</h2>\n          <div class=\"subheading-1\">Enter your password you will use to log in.</div>\n\n          <div class=\"mt-4\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <mat-form-field fxFlex=\"auto\">\n              <mat-label>Password</mat-label>\n              <input [type]=\"passwordInputType\" formControlName=\"password\" matInput required>\n              <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\n                      type=\"button\">\n                <mat-icon [icIcon]=\"icVisibility\"></mat-icon>\n              </button>\n              <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\n                      type=\"button\">\n                <mat-icon [icIcon]=\"icVisibilityOff\"></mat-icon>\n              </button>\n              <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"auto\">\n              <mat-label>Confirm Password</mat-label>\n              <input [type]=\"passwordInputType\" formControlName=\"passwordConfirm\" matInput required>\n              <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\n                      type=\"button\">\n                <mat-icon [icIcon]=\"icVisibility\"></mat-icon>\n              </button>\n              <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\n                      type=\"button\">\n                <mat-icon [icIcon]=\"icVisibilityOff\"></mat-icon>\n              </button>\n              <mat-hint>Please type in your password again.</mat-hint>\n            </mat-form-field>\n          </div>\n\n          <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n            <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n            <button [disabled]=\"passwordFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>NEXT\n            </button>\n          </div>\n        </form>\n      </mat-step>\n\n      <mat-step [stepControl]=\"confirmFormGroup\">\n        <form [formGroup]=\"confirmFormGroup\">\n          <ng-template matStepLabel>Confirm Creation</ng-template>\n\n          <div class=\"title m-0\">You're almost there!</div>\n          <div class=\"subheading-1\">To finish registration, accept our terms of service and click on \"Create Account\".\n          </div>\n\n          <div class=\"mt-4\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <mat-checkbox class=\"checkbox\" formControlName=\"terms\">\n              I agree to the terms of service and the usual stuff. *\n            </mat-checkbox>\n          </div>\n\n          <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n            <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n            <button (click)=\"submit()\" [disabled]=\"confirmFormGroup.invalid\" color=\"primary\" mat-raised-button\n                    matStepperNext>\n              CREATE ACCOUNT\n            </button>\n          </div>\n        </form>\n\n      </mat-step>\n    </mat-horizontal-stepper>\n  </div>\n\n  <h2 class=\"title mt-6 mb-4\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n    <span @scaleIn class=\"w-10 h-10 rounded-full text-primary mr-3 flex items-center justify-center bg-primary-light\">\n      <ic-icon [icon]=\"icVerticalSplit\" height=\"20px\" width=\"20px\"></ic-icon>\n    </span>\n    <span @fadeInRight class=\"block\">Vertical Form Wizard</span>\n  </h2>\n\n  <div @fadeInUp class=\"card overflow-hidden\">\n    <mat-vertical-stepper #verticalStepper=\"matVerticalStepper\" [linear]=\"true\">\n      <ng-template matStepperIcon=\"edit\">\n        <mat-icon [icIcon]=\"icDoneAll\"></mat-icon>\n      </ng-template>\n\n      <ng-template matStepperIcon=\"done\">\n        <mat-icon [icIcon]=\"icDoneAll\"></mat-icon>\n      </ng-template>\n\n      <mat-step [stepControl]=\"verticalAccountFormGroup\">\n        <form [formGroup]=\"verticalAccountFormGroup\">\n          <ng-template matStepLabel>Create Account</ng-template>\n\n          <div class=\"title m-0\">Create Account</div>\n          <div class=\"subheading-1\">Set up your account for testing purposes.</div>\n\n          <div class=\"mt-4\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <mat-form-field fxFlex=\"auto\">\n              <mat-label>Account Username</mat-label>\n              <input formControlName=\"username\" matInput required>\n              <mat-hint>This will be your unique login name.</mat-hint>\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"auto\">\n              <mat-label>Name</mat-label>\n              <input formControlName=\"name\" matInput required>\n              <mat-hint>How may we call you?</mat-hint>\n            </mat-form-field>\n\n            <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>E-Mail</mat-label>\n                <input formControlName=\"email\" matInput required>\n                <mat-hint align=\"end\">example@example.com</mat-hint>\n              </mat-form-field>\n\n              <div fxFlex=\"auto\" fxLayout=\"row\" fxLayoutGap=\"8px\">\n                <mat-form-field class=\"vex-flex-form-field\" fxFlex=\"none\">\n                  <mat-label>Code</mat-label>\n                  <mat-select formControlName=\"phonePrefix\">\n                    <mat-option *ngFor=\"let option of phonePrefixOptions\" [value]=\"option\">{{ option }}</mat-option>\n                  </mat-select>\n                </mat-form-field>\n\n                <mat-form-field class=\"vex-flex-form-field\" fxFlex=\"auto\">\n                  <mat-label>Phone Number</mat-label>\n                  <input formControlName=\"phone\" matInput>\n                  <mat-hint align=\"end\"></mat-hint>\n                </mat-form-field>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n            <button (click)=\"verticalStepper.reset()\" [disabled]=\"verticalAccountFormGroup.pristine\" color=\"primary\"\n                    mat-button\n                    type=\"button\">RESET\n            </button>\n            <button [disabled]=\"verticalAccountFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>\n              NEXT\n            </button>\n          </div>\n        </form>\n      </mat-step>\n\n      <mat-step [stepControl]=\"verticalPasswordFormGroup\">\n        <form [formGroup]=\"verticalPasswordFormGroup\">\n          <ng-template matStepLabel>Select a Password</ng-template>\n\n          <div class=\"title m-0\">Select a Password</div>\n          <div class=\"subheading-1\">Enter your password you will use to log in.</div>\n\n          <div class=\"mt-4\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <mat-form-field fxFlex=\"auto\">\n              <mat-label>Password</mat-label>\n              <input [type]=\"passwordInputType\" formControlName=\"password\" matInput required>\n              <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\n                      type=\"button\">\n                <mat-icon [icIcon]=\"icVisibility\"></mat-icon>\n              </button>\n              <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\n                      type=\"button\">\n                <mat-icon [icIcon]=\"icVisibilityOff\"></mat-icon>\n              </button>\n              <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"auto\">\n              <mat-label>Confirm Password</mat-label>\n              <input [type]=\"passwordInputType\" formControlName=\"passwordConfirm\" matInput required>\n              <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\n                      type=\"button\">\n                <mat-icon [icIcon]=\"icVisibility\"></mat-icon>\n              </button>\n              <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\n                      type=\"button\">\n                <mat-icon [icIcon]=\"icVisibilityOff\"></mat-icon>\n              </button>\n              <mat-hint>Please type in your password again.</mat-hint>\n            </mat-form-field>\n          </div>\n\n          <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n            <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n            <button [disabled]=\"verticalPasswordFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>\n              NEXT\n            </button>\n          </div>\n        </form>\n      </mat-step>\n\n      <mat-step [stepControl]=\"verticalConfirmFormGroup\">\n        <form [formGroup]=\"verticalConfirmFormGroup\">\n          <ng-template matStepLabel>Confirm Creation</ng-template>\n\n          <div class=\"title m-0\">You're almost there!</div>\n          <div class=\"subheading-1\">To finish registration, accept our terms of service and click on \"Create Account\".\n          </div>\n\n          <div class=\"mt-4\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <mat-checkbox class=\"checkbox\" formControlName=\"terms\">\n              I agree to the terms of service and the usual stuff. *\n            </mat-checkbox>\n          </div>\n\n          <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n            <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n            <button (click)=\"submit()\" [disabled]=\"verticalConfirmFormGroup.invalid\" color=\"primary\" mat-raised-button\n                    matStepperNext>\n              CREATE ACCOUNT\n            </button>\n          </div>\n        </form>\n\n      </mat-step>\n    </mat-vertical-stepper>\n  </div>\n</div>\n\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport icDescription from '@iconify/icons-ic/twotone-description';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { stagger80ms } from '../../../../../@vex/animations/stagger.animation';\nimport { fadeInUp400ms } from '../../../../../@vex/animations/fade-in-up.animation';\nimport { scaleIn400ms } from '../../../../../@vex/animations/scale-in.animation';\nimport { fadeInRight400ms } from '../../../../../@vex/animations/fade-in-right.animation';\nimport icVerticalSplit from '@iconify/icons-ic/twotone-vertical-split';\nimport icVisiblity from '@iconify/icons-ic/twotone-visibility';\nimport icVisibilityOff from '@iconify/icons-ic/twotone-visibility-off';\nimport icDoneAll from '@iconify/icons-ic/twotone-done-all';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\n\n@Component({\n  selector: 'vex-form-wizard',\n  templateUrl: './form-wizard.component.html',\n  styleUrls: ['./form-wizard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    stagger80ms,\n    fadeInUp400ms,\n    scaleIn400ms,\n    fadeInRight400ms\n  ]\n})\nexport class FormWizardComponent implements OnInit {\n\n  accountFormGroup: FormGroup;\n  passwordFormGroup: FormGroup;\n  confirmFormGroup: FormGroup;\n\n  verticalAccountFormGroup: FormGroup;\n  verticalPasswordFormGroup: FormGroup;\n  verticalConfirmFormGroup: FormGroup;\n\n  phonePrefixOptions = ['+1', '+27', '+44', '+49', '+61', '+91'];\n\n  passwordInputType = 'password';\n\n  icDoneAll = icDoneAll;\n  icDescription = icDescription;\n  icVerticalSplit = icVerticalSplit;\n  icVisibility = icVisiblity;\n  icVisibilityOff = icVisibilityOff;\n  icMoreVert = icMoreVert;\n\n  constructor(private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private snackbar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    /**\n     * Horizontal Stepper\n     * @type {FormGroup}\n     */\n    this.accountFormGroup = this.fb.group({\n      username: [null, Validators.required],\n      name: [null, Validators.required],\n      email: [null, Validators.required],\n      phonePrefix: [this.phonePrefixOptions[3]],\n      phone: [],\n    });\n\n    this.passwordFormGroup = this.fb.group({\n      password: [\n        null,\n        Validators.compose(\n          [\n            Validators.required,\n            Validators.minLength(6)\n          ]\n        )\n      ],\n      passwordConfirm: [null, Validators.required]\n    });\n\n    this.confirmFormGroup = this.fb.group({\n      terms: [null, Validators.requiredTrue]\n    });\n\n    /**\n     * Vertical Stepper\n     * @type {FormGroup}\n     */\n    this.verticalAccountFormGroup = this.fb.group({\n      username: [null, Validators.required],\n      name: [null, Validators.required],\n      email: [null, Validators.required],\n      phonePrefix: [this.phonePrefixOptions[3]],\n      phone: [],\n    });\n\n    this.verticalPasswordFormGroup = this.fb.group({\n      password: [\n        null,\n        Validators.compose(\n          [\n            Validators.required,\n            Validators.minLength(6)\n          ]\n        )\n      ],\n      passwordConfirm: [null, Validators.required]\n    });\n\n    this.verticalConfirmFormGroup = this.fb.group({\n      terms: [null, Validators.requiredTrue]\n    });\n  }\n\n  showPassword() {\n    this.passwordInputType = 'text';\n    this.cd.markForCheck();\n  }\n\n  hidePassword() {\n    this.passwordInputType = 'password';\n    this.cd.markForCheck();\n  }\n\n  submit() {\n    this.snackbar.open('Hooray! You successfully created your account.', null, {\n      duration: 5000\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormWizardRoutingModule } from './form-wizard-routing.module';\nimport { FormWizardComponent } from './form-wizard.component';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { SecondaryToolbarModule } from '../../../../../@vex/components/secondary-toolbar/secondary-toolbar.module';\nimport { MatSelectModule } from '@angular/material/select';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { BreadcrumbsModule } from '../../../../../@vex/components/breadcrumbs/breadcrumbs.module';\nimport { ContainerModule } from '../../../../../@vex/directives/container/container.module';\n\n\n@NgModule({\n  declarations: [FormWizardComponent],\n  imports: [\n    CommonModule,\n    FormWizardRoutingModule,\n    MatSnackBarModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatStepperModule,\n    FlexLayoutModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    SecondaryToolbarModule,\n    MatSelectModule,\n    IconModule,\n    BreadcrumbsModule,\n    ContainerModule\n  ]\n})\nexport class FormWizardModule {\n}\n"]}